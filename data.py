# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/116BI-6j_VAwW3INVxy3LJ9HvIH-W0IlM
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import os
from sklearn.preprocessing import LabelEncoder, StandardScaler
# %matplotlib inline
from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, StratifiedKFold
import pandas_profiling as pp

from google.colab import files
upload = files.upload()

valid_part = 0.3
pd.set_option('max_columns',100)
train0 = pd.read_csv('vehicles.csv')
train0.head(5)

from sklearn.preprocessing import OneHotEncoder as ohe
def OneHoting(x):
    x = np.array(x)
    x = ohe.fit_transform(x.reshape(-1,1)).toarray()
    return x

group_train0 =train0.groupby('manufacturer').size()
group_train0

group_train0.plot.bar()

df_train0 = train0[['transmission','fuel']]
df_train0

df_train0 =train0.groupby('transmission').size()
df_train0

df_train0.plot.bar(rot=0, color='green')

df_train0 =train0.groupby('fuel').size()
df_train0

df_train0.plot.bar(rot=0, color='blue')
df_train0.plot.line(color='red')

numerics = ['int8', 'int16', 'int32', 'int64', 'float16', 'float32', 'float64']
categorical_columns = []
features = train0.columns.values.tolist()
for col in features:
    if train0[col].dtype in numerics: continue
    categorical_columns.append(col)
# Encoding categorical features
for col in categorical_columns:
    if col in train0.columns:
        le = LabelEncoder()
        le.fit(list(train0[col].astype(str).values))
        train0[col] = le.transform(list(train0[col].astype(str).values))

train0['year'] = (train0['year']-2000).astype(int)
train0['odometer'] = train0['odometer'].astype(int)

train0.head(10)

train0.info()

train0['price'].value_counts()

train0 = train0[train0['price'] > 1000]
train0 = train0[train0['price'] < 40000]
# Rounded ['odometer'] to 5000
train0['odometer'] = train0['odometer'] // 5000
train0 = train0[train0['year'] > 10]

train0.info()

df_train0=train0.groupby('price').size()
df_train0=df_train0[:100]
df_train0.plot.bar()

train0.corr()

import seaborn as sns
sns.heatmap(train0.corr(), annot=True)

train0.describe()